@using FoodTeams.Entities
@using FoodTeams.Services
@inject OrderService orderService
@inject NavigationManager UriHelper



<form>
	<div class="input-group mb-3" style="width:50%; position:center; margin-right:auto; margin-left:auto">
		<div class="input-group-prepend">
			<span class="input-group-text" id="inputGroup-sizing-default">Restaurant name</span>
		</div>
		<input placeholder="@RestaurantName" @bind="RestaurantName" type="text" required="required" class="form-control" aria-label="Default" aria-describedby="inputGroup-sizing-default">
	</div>

	<div class="input-group mb-3" style="width:50%; position:center; margin-right:auto; margin-left:auto">
		<div class="input-group-prepend">
			<span class="input-group-text" id="inputGroup-sizing-default">MenuLink</span>
		</div>
		<input placeholder="Menu link" @bind ="MenuLink" type="text" class="form-control" aria-label="Default" aria-describedby="inputGroup-sizing-default">
	</div>

	<div class="input-group mb-3" style="width:50%; position:center; margin-right:auto; margin-left:auto">
		<div class="input-group-prepend">
			<span class="input-group-text" id="inputGroup-sizing-default">Minimal price</span>
		</div>
		<input placeholder="Minimal price" @bind="MinPrice" type="number" min="0" max="1000" class="form-control" aria-label="Default" aria-describedby="inputGroup-sizing-default">
	</div>

	<div class="input-group mb-3" style="width:50%; position:center; margin-right:auto; margin-left:auto">
		<div class="input-group-prepend">
			<span class="input-group-text" id="inputGroup-sizing-default">DeliveryPrice</span>
		</div>
		<input placeholder="Delivery price" @bind="DeliveryPrice" type="number" min="0" max="1000" class="form-control" aria-label="Default" aria-describedby="inputGroup-sizing-default">
	</div>

	<div class="input-group mb-3" style="width:50%; position:center; margin-right:auto; margin-left:auto">
		<div class="input-group-prepend">
			<span class="input-group-text" id="inputGroup-sizing-default">FreeDeliveryPrice</span>
		</div>
		<input placeholder="Free delivery price" @bind="FreeDeliveryPrice" type="number" min="0" max="1000" class="form-control" aria-label="Default" aria-describedby="inputGroup-sizing-default">
	</div>

	<div class="input-group mb-3" style="width:50%; position:center; margin-right:auto; margin-left:auto">
		<div class="input-group-prepend">
			<span class="input-group-text" id="inputGroup-sizing-default">BLIKNumber</span>
		</div>
		<input placeholder="BLIK number" @bind="BLIKNumber" type="number" min="0" class="form-control" aria-label="Default" aria-describedby="inputGroup-sizing-default">
	</div>

	<button type="button" disabled="@(MinPrice >=1000 || DeliveryPrice >=1000 || FreeDeliveryPrice >=1000)" style="display: block; margin: 0 auto; position: center; width: 100px"
			class="btn btn-success" @onclick="()=>UpdateOrder(orderService.Order)">Confirm
	</button>
	<br />
	<button type="button" style="display: block; margin: 0 auto; position: center; width: 100px"
			class="btn btn-warning" @onclick="()=>Cancel()">Cancel
	</button>
</form>

@if (CreateDialogOpen)
{
	<ModalDialog Title="Error"
			 Text="Please fill out Restaurant Name field"
			 OnClose="@OnCreateDialogClose">
	</ModalDialog>
}

@code {

	[Parameter]
	public string RestaurantName { get; set; }
	[Parameter]
	public string MenuLink { get; set; }
	[Parameter]
	public decimal MinPrice { get; set; }
	[Parameter]
	public decimal DeliveryPrice { get; set; }
	[Parameter]
	public decimal FreeDeliveryPrice { get; set; }
	[Parameter]
	public long BLIKNumber { get; set; }
	public bool CreateDialogOpen { get; set; } = false;

	public void UpdateOrder(Order order)
	{
		if(string.IsNullOrWhiteSpace(RestaurantName))
		{
			OpenCreateDialog();
			return;
		}
		GetOrder(order);
		//orderService.UpdateOrder(order);
		UriHelper.NavigateTo("/ActiveOrders");
	}

	public void GetOrder(Order order)
	{
		order.RestaurantName = RestaurantName;
		order.MenuLink = MenuLink;
		order.MinPrice = MinPrice;
		order.DeliveryPrice = DeliveryPrice;
		order.FreeDeliveryPrice = FreeDeliveryPrice;
		order.BLIKNumber = BLIKNumber;
		order.CreateDate = DateTime.Now;
		order.IsActive = true;
	}

	private void OpenCreateDialog()
	{
		CreateDialogOpen = true;
		StateHasChanged();
	}

	private void OnCreateDialogClose()
	{
		CreateDialogOpen = false;
		StateHasChanged();
	}

	public void Cancel()
	{
		UriHelper.NavigateTo("/ActiveOrders");
	}
}
