@page "/ActiveOrders"
@using FoodTeams.Entities
@using FoodTeams.Services
@inject NavigationManager UriHelper
@inject OrderService orderService
@inject DishService dishService



<h1 class="display-3 mb-10" style="text-align:center">Active Orders</h1>
<br />


<body>
	<table class="table table-bordered" style="background-color:#eeeeee; width:90%; position:center; margin-right:auto; margin-left:auto">
		<thead class="thead-dark">
			<tr>
				<th>Id</th>
				<th>Restaurant Name</th>
				<th>Menu link</th>
				<th>Minimal price</th>
				<th>Delivery price</th>
				<th>Free delivery price</th>
				<th>Blik number</th>
				<th>Actions</th>
			</tr>
		</thead>

		<tbody>
			@foreach (var order in orderService.GetOrdersByStatus(true))
			{
				<tr>
					<td><b>@order.Id</b></td>
					<td>@order.RestaurantName</td>
					<td><a href="@order.MenuLink" target="_blank">@order.MenuLink</a></td>
					<td>@order.MinPrice</td>
					<td>@order.DeliveryPrice</td>
					<td>@order.FreeDeliveryPrice</td>
					<td>@order.BLIKNumber</td>
					<td>
						<button class="material-icons" style="border:none; font-size:32px" @onclick="()=>ShowDishes(order.Id)">fastfood</button>
						<span></span>
						<button class="material-icons" style="border:none; font-size:32px" @onclick="()=>CompleteOrder(order.Id)">done</button>
						<span></span>
						<button class="material-icons" style="border:none; font-size:32px" @onclick="()=>EditOrder(order.Id)">edit</button>
						<span></span>
						<button class="material-icons" style="border:none; font-size:32px" @onclick="()=>OpenDeleteDialog(order)">delete</button>
					</td>
				</tr>
			}
		</tbody>
	</table>

	<button style="position: fixed; top: 10px; left: 10px; border:none; font-size:32px" class="material-icons" @onclick="NavigateToPrevious">arrow_back</button>

</body>


@if (DeleteDialogOpen)
{
	<ModalDialog Title="Are you sure?"
			 Text="Do you want to delete this entry?"
			 OnClose="@OnDeleteDialogClose">
	</ModalDialog>
}

@code {

	public bool DeleteDialogOpen { get; set; }
	public bool ReceiptDialogOpen { get; set; }

	public void NavigateToPrevious()
	{
		UriHelper.NavigateTo("/Welcome");
	}

	public void EditOrder(long id)
	{
		orderService.EditOrder(id);
		UriHelper.NavigateTo("/EditOrder");
	}

	public void DeleteOrder(long id)
	{
		orderService.DeleteOrder(id);
		StateHasChanged();
	}

	public void CompleteOrder(long id)
	{
		orderService.CompleteOrder(id);
	}

	void ShowDishes(long id)
	{
		dishService.GetDishes(id);
		UriHelper.NavigateTo("/ActiveOrderDishes");
	}

	private void OnDeleteDialogClose(bool accepted)
	{
		if (accepted)
		{
			DeleteOrder(orderService.Order.Id);
			StateHasChanged();
		}

		DeleteDialogOpen = false;
		StateHasChanged();
	}

	private void OpenDeleteDialog(Order order)
	{
		DeleteDialogOpen = true;
		orderService.Order = order;
		StateHasChanged();
	}

	private decimal GetMinimalOrderPrice(Order order)
	{
		dishService.GetDishes(order.Id);
		return orderService.GetMinimalOrderPrice(order);
	}


}

