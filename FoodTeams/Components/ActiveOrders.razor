@page "/ActiveOrders"
@using FoodTeams.Entities
@using FoodTeams.Services
@inject NavigationManager UriHelper
@inject OrderService service
@inject DishService Service



<h1 style="text-align:center">Active Orders</h1>

<head>
	<style>
		table,
		th,
		td {
			border: 1px solid black;
			border-collapse: collapse;
		}

		th,
		td {
			padding: 20px;
		}

		th {
			text-align: left;
		}
	</style>
</head>

<body>
	<table style="width:100%">
		<tr>
			<th>Id</th>
			<th>Restaurant Name</th>
			<th>Menu link</th>
			<th>Minimal price</th>
			<th>Delivery price</th>
			<th>Free delivery price</th>
			<th>Blik number</th>
			<th>Dishes</th>
			<th>Actions</th>
		</tr>

		@foreach (var order in service.Orders.Where(x => x.IsActive == true))
		{
			<tr>
				<td>@order.Id</td>
				<td>@order.RestaurantName</td>
				<td><a href="@order.MenuLink" target="_blank">Click</a></td>
				<td>@order.MinPrice</td>
				<td>@order.DeliveryPrice</td>
				<td>@order.FreeDeliveryPrice</td>
				<td>@order.BLIKNumber</td>
				<td>
					<button @onclick="()=>ShowDishes(order.Id)">Add / Edit / Delete </button>
				</td>
				<td>
					<button @onclick="()=>CompleteOrder(order.Id)">Complete</button>
					<span>/</span>
					<button @onclick="()=>EditOrder(order.Id)">Edit</button>
					<span>/</span>
					<button class="btn btn-danger btn-sm" @onclick="()=>OpenDeleteDialog(order)">Delete</button>
				</td>
			</tr>
		}
	</table>

	<button style="text-align:center; height:30px; width:150px ;margin:20px" @onclick="NavigateToPrevious">Back</button>

</body>
@if (DeleteDialogOpen)
{
    <ModalDialog Title="Are you sure?"
                 Text="Do you want to delete this entry?"
                 OnClose="@OnDeleteDialogClose">
    </ModalDialog>
}
@code {

	public bool DeleteDialogOpen { get; set; }

	public void EditOrder(long id)
	{
		service.EditOrder(id);
		UriHelper.NavigateTo("/EditOrder");
	}

	public void DeleteOrder(long id)
	{
		service.DeleteOrder(id);
		StateHasChanged();
	}

	public void CompleteOrder(long id)
	{
		service.CompleteOrder(id);
	}

	void ShowDishes(long id)
	{
		Service.GetDishes(id);
		UriHelper.NavigateTo("/ActiveOrderDishes");
	}

	public void NavigateToPrevious()
	{
		UriHelper.NavigateTo("/Welcome");
	}

	private void OnDeleteDialogClose(bool accepted)
	{
		if (accepted)
		{
			DeleteOrder(service.Order.Id);
			StateHasChanged();
		}

		DeleteDialogOpen = false;
		StateHasChanged();
	}

	private void OpenDeleteDialog(Order order)
	{
		DeleteDialogOpen = true;
		service.Order = order;
		StateHasChanged();
    }
}
